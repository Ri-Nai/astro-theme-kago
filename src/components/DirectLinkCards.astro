---
import DirectLinkCard from "./DirectLinkCard.astro";

export interface LinkItem {
  title: string;
  description?: string;
  website: string;
  image?: string;
}

export interface Props {
  title?: string;
  description?: string;
  website?: string;
  image?: string;
  basePath?: string;
  links?: LinkItem[];
}

const {
  title,
  description,
  website,
  image,
  basePath = "",
  links = [],
} = Astro.props;

// 兼容旧的单个链接模式
const linkItems: LinkItem[] =
  links.length > 0
    ? links
    : title
      ? [
          {
            title,
            description,
            website: website || "",
            image,
          },
        ]
      : [];
---

<div class="direct-link-cards">
  {
    linkItems.map((link) => (
      <DirectLinkCard
        title={link.title}
        description={link.description}
        website={link.website}
        image={link.image}
        basePath={basePath}
      />
    ))
  }
</div>

<style>
  .direct-link-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
    margin: 2rem 0;
    padding: 0;
    width: 100%;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .direct-link-cards {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
  }

  /* 当有两个卡片时，确保两栏布局占满宽度 */
  .direct-link-cards:has(:nth-child(2):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: none;
  }

  @media (max-width: 768px) {
    .direct-link-cards:has(:nth-child(2):last-child) {
      grid-template-columns: 1fr;
    }
  }

  /* 当有奇数个卡片且大于2个时，最后一个跨两列 */
  .direct-link-cards:has(:nth-child(n + 3)):has(:nth-child(odd):last-child)
    :last-child {
    grid-column: 1 / -1;
    max-width: 400px;
    margin: 0 auto;
  }

  @media (max-width: 768px) {
    .direct-link-cards:has(:nth-child(n + 3)):has(:nth-child(odd):last-child)
      :last-child {
      grid-column: auto;
      max-width: none;
      margin: 0;
    }
  }
</style>
